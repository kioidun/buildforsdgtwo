{"version":3,"sources":["components/form.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleChange","event","setState","population","target","value","handleChange2","timeToElapse","handleChange3","reportedCases","handleChange4","totalHospitalBeds","handleSelectChange","periodType","handleSubmit","preventDefault","alert","state","impact","severeImpact","class","id","onSubmit","this","for","type","data-population","onChange","placeholder","data-time-to-elapse","data-reported-cases","data-total-hospital-beds","data-period-type","data-go-estimate","data","input","impactTotal","severeImpactTotal","timetoElapse","hospitalbeds","averageDailyIncome","region","avgDailyIncomeInUSD","averageDailyIncomePopulation","avgDailyIncomePopulation","currentlyInfectedImpact","Math","trunc","currentlyInfectedSevere","severeCasesByRequestedTimeImpact","numberofhospitalbeds","hospitalBedsByRequestedTimeImpact","casesForICUByRequestedTimeImpact","casesForVentilatorsByRequestedTimeImpact","severeCasesByRequestedTimeSevere","hospitalBedsByRequestedTimeSevere","casesForICUByRequestedTimeSevere","casesForVentilatorsByRequestedTimeSevere","dollarsInFlightImpact","dollarsInFlightSevere","currentlyInfected","infectionsByRequestedTime","severeCasesByRequestedTime","hospitalBedsByRequestedTime","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","dollarsInFlight","displayData","data_population","data_time_to_elapse","data_reported_cases","data_total_hospital_beds","data_period_type","Component","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d96697c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: \"\",\n      timeToElapse: \"\",\n      reportedCases: \"\",\n      totalHospitalBeds: \"\",\n      periodType: \"days\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      population: event.target.value,\n    });\n  };\n  handleChange2 = (event) => {\n    this.setState({\n      timeToElapse: event.target.value,\n    });\n  };\n  handleChange3 = (event) => {\n    this.setState({\n      reportedCases: event.target.value,\n    });\n  };\n  handleChange4 = (event) => {\n    this.setState({\n      totalHospitalBeds: event.target.value,\n    });\n  };\n  handleSelectChange = (event) => {\n    this.setState({\n      periodType: event.target.value,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n   // const data = this.state;\n    alert(\n      `${this.state.population} ${this.state.timeToElapse} ${this.state.reportedCases} \n      ${this.state.totalHospitalBeds} ${this.state.periodType}`\n    );\n  };\n\n  render() {\n    const impact = {};\n    const severeImpact = {};\n    const displayData = (input) => {\n      const impactTotal = input.reportedCases * 10;\n      const severeImpactTotal = input.reportedCases * 50;\n      let timetoElapse = input.timeToElapse;\n      const hospitalbeds = input.totalHospitalBeds;\n      const averageDailyIncome = input.region.avgDailyIncomeInUSD;\n      const averageDailyIncomePopulation =\n        input.region.avgDailyIncomePopulation;\n\n      if (input.periodType === \"months\") {\n        timetoElapse = input.timeToElapse * 30;\n      } else if (input.periodType === \"weeks\") {\n        timetoElapse = input.timeToElapse * 7;\n      }\n      const currentlyInfectedImpact =\n        impactTotal * 2 ** Math.trunc(timetoElapse / 3);\n      const currentlyInfectedSevere =\n        severeImpactTotal * 2 ** Math.trunc(timetoElapse / 3);\n      const severeCasesByRequestedTimeImpact =\n        (15 / 100) * currentlyInfectedImpact;\n      const numberofhospitalbeds = Math.trunc(hospitalbeds * (35 / 100));\n      const hospitalBedsByRequestedTimeImpact =\n        numberofhospitalbeds - (severeCasesByRequestedTimeImpact - 1);\n      const casesForICUByRequestedTimeImpact = Math.trunc(\n        (5 / 100) * currentlyInfectedImpact\n      );\n      const casesForVentilatorsByRequestedTimeImpact = Math.trunc(\n        (2 / 100) * currentlyInfectedImpact\n      );\n      const severeCasesByRequestedTimeSevere =\n        (15 / 100) * currentlyInfectedSevere;\n      const hospitalBedsByRequestedTimeSevere =\n        numberofhospitalbeds - (severeCasesByRequestedTimeSevere - 1);\n      const casesForICUByRequestedTimeSevere = Math.trunc(\n        (5 / 100) * currentlyInfectedSevere\n      );\n      const casesForVentilatorsByRequestedTimeSevere = Math.trunc(\n        (2 / 100) * currentlyInfectedSevere\n      );\n      const dollarsInFlightImpact = Math.trunc(\n        (currentlyInfectedImpact *\n          averageDailyIncomePopulation *\n          averageDailyIncome) /\n          timetoElapse\n      );\n      const dollarsInFlightSevere = Math.trunc(\n        (currentlyInfectedSevere *\n          averageDailyIncomePopulation *\n          averageDailyIncome) /\n          timetoElapse\n      );\n\n      impact.currentlyInfected = impactTotal;\n      impact.infectionsByRequestedTime = currentlyInfectedImpact;\n      impact.severeCasesByRequestedTime = severeCasesByRequestedTimeImpact;\n      impact.hospitalBedsByRequestedTime = hospitalBedsByRequestedTimeImpact;\n      impact.casesForICUByRequestedTime = casesForICUByRequestedTimeImpact;\n      impact.casesForVentilatorsByRequestedTime = casesForVentilatorsByRequestedTimeImpact;\n      impact.dollarsInFlight = dollarsInFlightImpact;\n      severeImpact.currentlyInfected = severeImpactTotal;\n      severeImpact.infectionsByRequestedTime = currentlyInfectedSevere;\n      severeImpact.severeCasesByRequestedTime = severeCasesByRequestedTimeSevere;\n      severeImpact.hospitalBedsByRequestedTime = hospitalBedsByRequestedTimeSevere;\n      severeImpact.casesForICUByRequestedTime = casesForICUByRequestedTimeSevere;\n      severeImpact.casesForVentilatorsByRequestedTime = casesForVentilatorsByRequestedTimeSevere;\n      severeImpact.dollarsInFlight = dollarsInFlightSevere;\n    };\n    const covid19ImpactEstimator = (data) => {\n      data = [\n        {\n          data_population: this.state.reportedCases,\n          data_time_to_elapse: this.state.timetoElapse,\n          data_reported_cases: this.state.reportedCases,\n          data_total_hospital_beds: this.state.totalHospitalBeds,\n          data_period_type: this.state.periodType,\n        },\n      ];\n      // data = calculateDataInput(2747, 38, 'days', 678874, 4, 0.73);\n      displayData(data);\n      const result = { data, impact, severeImpact };\n      return result;\n    };\n    return (\n      <form class=\"formtwo\" id=\"form\" onSubmit={this.handleSubmit}>\n        <div class=\"form-control\">\n          <label for=\"population\">Population</label>\n          <input\n            type=\"text\"\n            data-population=\"population\"\n            id=\"population\"\n            value={this.state.population}\n            onChange={this.handleChange}\n            placeholder=\"data-population\"\n          />\n          <i class=\"fas fa-check-circle\"></i>\n          <i class=\"fas fa-exclamation-circle\"></i>\n          <small>Error message</small>\n        </div>\n        <div class=\"form-control\">\n          <label for=\"timeToElapse\">Time To Elapse</label>\n          <input\n            type=\"text\"\n            data-time-to-elapse=\"timeToElapse\"\n            id=\"timeToElapse\"\n            value={this.state.timeToElapse}\n            onChange={this.handleChange2}\n            placeholder=\"data-time-to-elapse\"\n          />\n          <i class=\"fas fa-check-circle\"></i>\n          <i class=\"fas fa-exclamation-circle\"></i>\n          <small>Error message</small>\n        </div>\n        <div class=\"form-control\">\n          <label for=\"reportedCases\">Reported Cases</label>\n          <input\n            type=\"text\"\n            data-reported-cases=\"reportedCases\"\n            id=\"reportedCases\"\n            value={this.state.reportedCases}\n            onChange={this.handleChange3}\n            placeholder=\"data-reported-cases\"\n          />\n          <i class=\"fas fa-check-circle\"></i>\n          <i class=\"fas fa-exclamation-circle\"></i>\n          <small>Error message</small>\n        </div>\n        <div class=\"form-control\">\n          <label for=\"totalHospitalBeds\">Total Hospital Beds</label>\n          <input\n            type=\"text\"\n            data-total-hospital-beds=\"totalHospitalBeds\"\n            id=\"totalHospitalBeds\"\n            value={this.state.totalHospitalBeds}\n            onChange={this.handleChange4}\n            placeholder=\"data-total-hospital-beds\"\n          />\n          <i class=\"fas fa-check-circle\"></i>\n          <i class=\"fas fa-exclamation-circle\"></i>\n          <small>Error message</small>\n        </div>\n        <div class=\"form-control\">\n          <label for=\"periodType\">Period Type</label>\n          <select\n            data-period-type=\"data-period-Type\"\n            id=\"periodType\"\n            value={this.state.periodType}\n            onChange={this.handleSelectChange}\n          >\n            <option value=\"days\">days</option>\n            <option value=\"weeks\">weeks</option>\n            <option value=\"months\">months</option>\n          </select>\n        </div>\n        <button data-go-estimate=\"data-go-estimate\" type=\"submit\">\n          Estimate\n        </button>\n\n        <div class=\"form-control\">\n          <label for=\"data-result\">data-result</label>\n          <input type=\"text\" id=\"data-result\" value={covid19ImpactEstimator} />\n        </div>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div class=\"container\">\n        <nav class=\"navbar\">\n          <ul>\n            <li>\n              <a href=\"#home\">Home</a>\n            </li>\n            <li>\n              <a href=\"#form\">Form</a>\n            </li>\n          </ul>\n        </nav>\n        <section id=\"home\">\n          <h1>COVID-19 Health Simulator</h1>\n          <p>Build for SDG</p>\n        </section>\n        <section id=\"formLoading\">\n          <h1>Fill in the form</h1>\n          <Form />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}